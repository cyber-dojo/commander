name: Main

on:
  push:

env:
  IMAGE_TAR_FILENAME: /tmp/${{ github.event.repository.name }}.${{ github.sha }}.tar
  DOCKER_API_VERSION: ${{ vars.DOCKER_API_VERSION }}

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      image_tag:   ${{ steps.vars.outputs.image_tag }}
      image_name:  ${{ steps.vars.outputs.image_name }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Prepare output for workflow jobs
        id: vars
        run: |
          TAG="${GITHUB_SHA:0:7}"
          echo "image_tag=${TAG}"               >> ${GITHUB_OUTPUT}          
          echo "image_name=cyberdojo/commander" >> ${GITHUB_OUTPUT}


  build-test:
    runs-on: ubuntu-latest
    needs: [setup]
    env:
      IMAGE_NAME: ${{ needs.setup.outputs.image_name }}
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Build and Test
        run:
          make image test_image

      - name: Tar Docker image
        run:
          docker image save "${IMAGE_NAME}"
            --output "${IMAGE_TAR_FILENAME}"

      - name: Cache Docker image
        uses: actions/cache@v4
        with:
          path: ${{ env.IMAGE_TAR_FILENAME }}
          key:  ${{ env.IMAGE_NAME }}


  publish:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: [setup, build-test]
    env:
      IMAGE_NAME: ${{ needs.setup.outputs.image_name }}
      IMAGE_TAG:  ${{ needs.setup.outputs.image_tag }}
    steps:
      - name: Retrieve Docker image from cache
        uses: actions/cache@v4
        with:
          path: ${{ env.IMAGE_TAR_FILENAME }}
          key:  ${{ env.IMAGE_NAME }}

      - name: Load Docker image
        run:
          docker image load 
            --input ${IMAGE_TAR_FILENAME}

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Publish to dockerhub
        run: |
          docker tag ${IMAGE_NAME} ${IMAGE_NAME}:${IMAGE_TAG}
          docker push ${IMAGE_NAME}:${IMAGE_TAG}
          docker push ${IMAGE_NAME}:latest
          
