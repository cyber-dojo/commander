
I've built a server on a digital ocean droplet.  Ubuntu 22.04
These commands are handy...

curl -sSL https://get.docker.com/ | sh
sudo usermod -aG docker $USER
sudo mkdir /cyber-dojo
sudo chown 19663:65533 /cyber-dojo
curl -O https://raw.githubusercontent.com/cyber-dojo/commander/master/cyber-dojo
chmod 700 cyber-dojo

The re-login for the usermode command to take effect.

It starts, but from the browser, if you click the [create a new practice]
button it does not work. The console log says...

Uncaught Error: ArgumentError: could not find a temporary directory
  (in /usr/local/lib/ruby/3.2.0/tmpdir.rb:38:in `tmpdir')
    <anonymous> http://144.126.201.57/creator/assets/app.js:1

The problem seems to be related to being able to write to the /tmp dir.
I found this was very helpful.
https://github.com/rubygems/rubygems/issues/3649

docker exec -it cyber_dojo_creator bash
env | grep SHA
SHA=a9136e1159731308f813fe2c9486359ffce1d795

I use the code below to create a file called probe.rb in /tmp

cd /tmp

{
echo '#!/usr/bin/env ruby'
echo
echo 'require "tmpdir"'
echo 'dir = File.expand_path("/tmp")'
echo 'puts dir.inspect'
echo 'stat = File.stat(dir)'
echo 'puts "directory? #{stat.directory?}"'
echo 'puts "writable? #{stat.writable?}"'
echo 'puts "world_writable? #{stat.world_writable?}"'
echo 'puts "sticky? #{stat.sticky?}"'
echo 'puts Dir.tmpdir'
echo 'puts Dir.mktmpdir'
} >> probe.rb

Then

ruby ./probe.rb

And it prints

"/tmp"directory? true
writable? true
world_writable? 511
sticky? false
system temporary path is world-writable: /tmp
/tmp is world-writable: /tmp
. is world-writable: /tmp
/usr/local/lib/ruby/3.2.0/tmpdir.rb:38:in `tmpdir': could not find a temporary directory (ArgumentError)

    end or raise ArgumentError, "could not find a temporary directory"
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        from probe.rb:11:in `<main>'

Problem seems to be...
sticky? false

So I need to fix this properly.
But for now I am simply removing the readonly settings from
the yml file in commander. That did not work.

---------------------------------------------------------------------------------

On my macbook.
Bring up a server
Shell into creator container...

docker exec -it cyber_dojo_creator bash
cat /etc/issue
Welcome to Alpine Linux 3.17
ruby --version
ruby 3.2.2 (2023-03-30 revision e51014f9c0) [x86_64-linux-musl]

cd /tmp
...create probe.rb as above...
ruby probe.rb

"/tmp"
directory? true
writable? true
world_writable? 511
sticky? true
/tmp
/tmp/d20230906-85944-t10421

So this has sticky? true

sticky? false - when running on Ubuntu 22.04 droplet  Confirmed

---------------------------------------------------------------------------------

Trying on Ubuntu 22.04 droplet

curl -sSL https://get.docker.com/ | sh
docker run --rm -it alpine sh
apk add ruby

Also Alpine 3.18, ruby 3.2.2 (2023-03-30 revision e51014f9c0) [aarch64-linux-musl]

docker run --rm -it --read-only --tmpfs=/tmp ruby:alpine sh
Then create probe.rb in /tmp and run it
says sticky? true

But try it with

docker run --rm -it --tmpfs=/tmp alpine sh
apk add ruby
Then create probe.rb in /tmp and run it
Now it fails...


docker run --rm -it --tmpfs=/tmp ruby:alpine sh
Raises...

docker run --rm -it --read-only ruby:alpine sh
Can't try this one because I can't create probe.rb in /tmp
So running commands individually in irb
world_writeable? 511
sticky? true

puts Dir.tmpdir
  /tmp

puts Dir.mktmpdir
/usr/local/lib/ruby/3.2.0/tmpdir.rb:90:in `mkdir': Read-only file system @ dir_s_mkdir - /tmp/d20230906-8-am11sq (Errno::EROFS)
        from /usr/local/lib/ruby/3.2.0/tmpdir.rb:90:in `block in mktmpdir'
        from /usr/local/lib/ruby/3.2.0/tmpdir.rb:150:in `create'
        from /usr/local/lib/ruby/3.2.0/tmpdir.rb:88:in `mktmpdir'
        from (irb):10:in `<main>'
        from /usr/local/lib/ruby/gems/3.2.0/gems/irb-1.6.2/exe/irb:11:in `<top (required)>'
        from /usr/local/bin/irb:25:in `load'
        from /usr/local/bin/irb:25:in `<main>'

which makes sense, as /tmp is read-only and there is no tmpfs for /tmp


Google says
Tell ruby where it can securely create temporary files by setting one of the
environment variables TMPDIR or TMP or TEMP to a directory that is secure.

https://stackoverflow.com/questions/21117878/ruby-could-not-find-a-temporary-directory
Is also helpful...

<quote>
When you tell Ruby >= 2.0 to create a temporary file, it looks for a directory where it can
create a file in a secure way. Creating temporary files in a directory where anybody can replace
the file while you are working on it would be a big (and common) security hole!

You have two possibilities:

    Tell ruby where it can securely create temporary files by setting one of the environment
    variables TMPDIR or TMP or TEMP to a directory that is secure.

    Fix up the permissions on a directory that ruby tries to use. Directories that Ruby tries to
    use by default: systempdir ("/tmp") and the current directory

Ruby deems a directory secure if the directory is either not world writable or has the sticky
bit set. (Do not confuse the sticky bit (t) with the seteuid/setgid bit (s)!)
</quote>

Seems I will also need to fix the sticky bit...

